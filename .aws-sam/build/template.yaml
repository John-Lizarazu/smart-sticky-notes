AWSTemplateFormatVersion: '2010-09-09'
Description: smart-notes-api
Transform:
- AWS::Serverless-2016-10-31
Resources:
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: HTTP GET to list all notes from DynamoDB
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /notes
            Method: GET
      CodeUri: getAllItemsFunction
    Metadata:
      SamResourceId: getAllItemsFunction
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: HTTP GET to fetch one note by id
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /notes/{id}
            Method: GET
      CodeUri: getByIdFunction
    Metadata:
      SamResourceId: getByIdFunction
  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: HTTP POST to create a note in DynamoDB
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /notes
            Method: POST
      CodeUri: putItemFunction
    Metadata:
      SamResourceId: putItemFunction
  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
